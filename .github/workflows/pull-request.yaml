name: Lint, Test, and Build

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      _VCPKG_: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
      VCPKG_BINARY_SOURCES: 'clear;x-gha,readwrite'
    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-22.04, macos-13]
        c_compiler: [clang-15, clang]
        include:
          - os: ubuntu-22.04
            c_compiler: clang-15
          - os: macos-13
            c_compiler: clang
        exclude:
          - os: ubuntu-22.04
            c_compiler: clang
          - os: macos-13
            c_compiler: clang-15

    steps:
    - uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: run-vcpkg
      uses: lukka/run-vcpkg@v11.5
      with:
        runVcpkgInstall: true

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -S ${{ github.workspace }}
        
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }}

    - name: Lint
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --target format
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --target tidy

    - name: Test
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --target test
      env:
        SDL_AUDIODRIVER: dummy
        SDL_VIDEODRIVER: dummy
